//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("WaveWebModel", "FK_Activity_Activity", "Org", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Wave.Models.Org), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Wave.Models.Activity), true)]
[assembly: EdmRelationshipAttribute("WaveWebModel", "FK_TakeActivity_Activity", "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Wave.Models.Activity), "TakeActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Wave.Models.TakeActivity), true)]
[assembly: EdmRelationshipAttribute("WaveWebModel", "FK_Org_Org", "Org", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Wave.Models.Org), "Org1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Wave.Models.Org), true)]
[assembly: EdmRelationshipAttribute("WaveWebModel", "FK_TakeActivity_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Wave.Models.Users), "TakeActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Wave.Models.TakeActivity), true)]
[assembly: EdmRelationshipAttribute("WaveWebModel", "ReviewActivity", "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Wave.Models.Activity), "Admin", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Wave.Models.Admin))]

#endregion

namespace Wave.Models
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class WaveWebEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“WaveWebEntities”部分中的连接字符串初始化新 WaveWebEntities 对象。
        /// </summary>
        public WaveWebEntities() : base("name=WaveWebEntities", "WaveWebEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WaveWebEntities 对象。
        /// </summary>
        public WaveWebEntities(string connectionString) : base(connectionString, "WaveWebEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WaveWebEntities 对象。
        /// </summary>
        public WaveWebEntities(EntityConnection connection) : base(connection, "WaveWebEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Activity> Activity
        {
            get
            {
                if ((_Activity == null))
                {
                    _Activity = base.CreateObjectSet<Activity>("Activity");
                }
                return _Activity;
            }
        }
        private ObjectSet<Activity> _Activity;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Admin> Admin
        {
            get
            {
                if ((_Admin == null))
                {
                    _Admin = base.CreateObjectSet<Admin>("Admin");
                }
                return _Admin;
            }
        }
        private ObjectSet<Admin> _Admin;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Org> Org
        {
            get
            {
                if ((_Org == null))
                {
                    _Org = base.CreateObjectSet<Org>("Org");
                }
                return _Org;
            }
        }
        private ObjectSet<Org> _Org;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SuperAdmin> SuperAdmin
        {
            get
            {
                if ((_SuperAdmin == null))
                {
                    _SuperAdmin = base.CreateObjectSet<SuperAdmin>("SuperAdmin");
                }
                return _SuperAdmin;
            }
        }
        private ObjectSet<SuperAdmin> _SuperAdmin;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TakeActivity> TakeActivity
        {
            get
            {
                if ((_TakeActivity == null))
                {
                    _TakeActivity = base.CreateObjectSet<TakeActivity>("TakeActivity");
                }
                return _TakeActivity;
            }
        }
        private ObjectSet<TakeActivity> _TakeActivity;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Activity EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToActivity(Activity activity)
        {
            base.AddObject("Activity", activity);
        }
    
        /// <summary>
        /// 用于向 Admin EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAdmin(Admin admin)
        {
            base.AddObject("Admin", admin);
        }
    
        /// <summary>
        /// 用于向 Org EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrg(Org org)
        {
            base.AddObject("Org", org);
        }
    
        /// <summary>
        /// 用于向 SuperAdmin EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSuperAdmin(SuperAdmin superAdmin)
        {
            base.AddObject("SuperAdmin", superAdmin);
        }
    
        /// <summary>
        /// 用于向 TakeActivity EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTakeActivity(TakeActivity takeActivity)
        {
            base.AddObject("TakeActivity", takeActivity);
        }
    
        /// <summary>
        /// 用于向 Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaveWebModel", Name="Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Activity : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Activity 对象。
        /// </summary>
        /// <param name="actid">actid 属性的初始值。</param>
        /// <param name="orgname">orgname 属性的初始值。</param>
        /// <param name="actname">actname 属性的初始值。</param>
        /// <param name="actstate">actstate 属性的初始值。</param>
        /// <param name="usenum">usenum 属性的初始值。</param>
        /// <param name="starttime">starttime 属性的初始值。</param>
        /// <param name="endtime">endtime 属性的初始值。</param>
        /// <param name="slogan">slogan 属性的初始值。</param>
        /// <param name="acttext">acttext 属性的初始值。</param>
        /// <param name="pageid">pageid 属性的初始值。</param>
        public static Activity CreateActivity(global::System.Int32 actid, global::System.String orgname, global::System.String actname, global::System.Int32 actstate, global::System.Int32 usenum, global::System.DateTime starttime, global::System.DateTime endtime, global::System.String slogan, global::System.String acttext, global::System.Int32 pageid)
        {
            Activity activity = new Activity();
            activity.actid = actid;
            activity.orgname = orgname;
            activity.actname = actname;
            activity.actstate = actstate;
            activity.usenum = usenum;
            activity.starttime = starttime;
            activity.endtime = endtime;
            activity.slogan = slogan;
            activity.acttext = acttext;
            activity.pageid = pageid;
            return activity;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 actid
        {
            get
            {
                return _actid;
            }
            set
            {
                if (_actid != value)
                {
                    OnactidChanging(value);
                    ReportPropertyChanging("actid");
                    _actid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("actid");
                    OnactidChanged();
                }
            }
        }
        private global::System.Int32 _actid;
        partial void OnactidChanging(global::System.Int32 value);
        partial void OnactidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String orgname
        {
            get
            {
                return _orgname;
            }
            set
            {
                OnorgnameChanging(value);
                ReportPropertyChanging("orgname");
                _orgname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("orgname");
                OnorgnameChanged();
            }
        }
        private global::System.String _orgname;
        partial void OnorgnameChanging(global::System.String value);
        partial void OnorgnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String actname
        {
            get
            {
                return _actname;
            }
            set
            {
                OnactnameChanging(value);
                ReportPropertyChanging("actname");
                _actname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("actname");
                OnactnameChanged();
            }
        }
        private global::System.String _actname;
        partial void OnactnameChanging(global::System.String value);
        partial void OnactnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 actstate
        {
            get
            {
                return _actstate;
            }
            set
            {
                OnactstateChanging(value);
                ReportPropertyChanging("actstate");
                _actstate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("actstate");
                OnactstateChanged();
            }
        }
        private global::System.Int32 _actstate;
        partial void OnactstateChanging(global::System.Int32 value);
        partial void OnactstateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> maxuser
        {
            get
            {
                return _maxuser;
            }
            set
            {
                OnmaxuserChanging(value);
                ReportPropertyChanging("maxuser");
                _maxuser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("maxuser");
                OnmaxuserChanged();
            }
        }
        private Nullable<global::System.Int32> _maxuser;
        partial void OnmaxuserChanging(Nullable<global::System.Int32> value);
        partial void OnmaxuserChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 usenum
        {
            get
            {
                return _usenum;
            }
            set
            {
                OnusenumChanging(value);
                ReportPropertyChanging("usenum");
                _usenum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("usenum");
                OnusenumChanged();
            }
        }
        private global::System.Int32 _usenum;
        partial void OnusenumChanging(global::System.Int32 value);
        partial void OnusenumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime starttime
        {
            get
            {
                return _starttime;
            }
            set
            {
                OnstarttimeChanging(value);
                ReportPropertyChanging("starttime");
                _starttime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("starttime");
                OnstarttimeChanged();
            }
        }
        private global::System.DateTime _starttime;
        partial void OnstarttimeChanging(global::System.DateTime value);
        partial void OnstarttimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime endtime
        {
            get
            {
                return _endtime;
            }
            set
            {
                OnendtimeChanging(value);
                ReportPropertyChanging("endtime");
                _endtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("endtime");
                OnendtimeChanged();
            }
        }
        private global::System.DateTime _endtime;
        partial void OnendtimeChanging(global::System.DateTime value);
        partial void OnendtimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String slogan
        {
            get
            {
                return _slogan;
            }
            set
            {
                OnsloganChanging(value);
                ReportPropertyChanging("slogan");
                _slogan = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("slogan");
                OnsloganChanged();
            }
        }
        private global::System.String _slogan;
        partial void OnsloganChanging(global::System.String value);
        partial void OnsloganChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String acttext
        {
            get
            {
                return _acttext;
            }
            set
            {
                OnacttextChanging(value);
                ReportPropertyChanging("acttext");
                _acttext = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("acttext");
                OnacttextChanged();
            }
        }
        private global::System.String _acttext;
        partial void OnacttextChanging(global::System.String value);
        partial void OnacttextChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pageid
        {
            get
            {
                return _pageid;
            }
            set
            {
                OnpageidChanging(value);
                ReportPropertyChanging("pageid");
                _pageid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pageid");
                OnpageidChanged();
            }
        }
        private global::System.Int32 _pageid;
        partial void OnpageidChanging(global::System.Int32 value);
        partial void OnpageidChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaveWebModel", "FK_Activity_Activity", "Org")]
        public Org Org
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Org>("WaveWebModel.FK_Activity_Activity", "Org").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Org>("WaveWebModel.FK_Activity_Activity", "Org").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Org> OrgReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Org>("WaveWebModel.FK_Activity_Activity", "Org");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Org>("WaveWebModel.FK_Activity_Activity", "Org", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaveWebModel", "FK_TakeActivity_Activity", "TakeActivity")]
        public EntityCollection<TakeActivity> TakeActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TakeActivity>("WaveWebModel.FK_TakeActivity_Activity", "TakeActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TakeActivity>("WaveWebModel.FK_TakeActivity_Activity", "TakeActivity", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaveWebModel", "ReviewActivity", "Admin")]
        public EntityCollection<Admin> Admin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Admin>("WaveWebModel.ReviewActivity", "Admin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Admin>("WaveWebModel.ReviewActivity", "Admin", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaveWebModel", Name="Admin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Admin : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Admin 对象。
        /// </summary>
        /// <param name="adminname">adminname 属性的初始值。</param>
        /// <param name="astate">astate 属性的初始值。</param>
        /// <param name="apasswd">apasswd 属性的初始值。</param>
        public static Admin CreateAdmin(global::System.String adminname, global::System.Int32 astate, global::System.String apasswd)
        {
            Admin admin = new Admin();
            admin.adminname = adminname;
            admin.astate = astate;
            admin.apasswd = apasswd;
            return admin;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String adminname
        {
            get
            {
                return _adminname;
            }
            set
            {
                if (_adminname != value)
                {
                    OnadminnameChanging(value);
                    ReportPropertyChanging("adminname");
                    _adminname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("adminname");
                    OnadminnameChanged();
                }
            }
        }
        private global::System.String _adminname;
        partial void OnadminnameChanging(global::System.String value);
        partial void OnadminnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 astate
        {
            get
            {
                return _astate;
            }
            set
            {
                OnastateChanging(value);
                ReportPropertyChanging("astate");
                _astate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("astate");
                OnastateChanged();
            }
        }
        private global::System.Int32 _astate;
        partial void OnastateChanging(global::System.Int32 value);
        partial void OnastateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String apasswd
        {
            get
            {
                return _apasswd;
            }
            set
            {
                OnapasswdChanging(value);
                ReportPropertyChanging("apasswd");
                _apasswd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("apasswd");
                OnapasswdChanged();
            }
        }
        private global::System.String _apasswd;
        partial void OnapasswdChanging(global::System.String value);
        partial void OnapasswdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String aemail
        {
            get
            {
                return _aemail;
            }
            set
            {
                OnaemailChanging(value);
                ReportPropertyChanging("aemail");
                _aemail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("aemail");
                OnaemailChanged();
            }
        }
        private global::System.String _aemail;
        partial void OnaemailChanging(global::System.String value);
        partial void OnaemailChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaveWebModel", "ReviewActivity", "Activity")]
        public EntityCollection<Activity> Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("WaveWebModel.ReviewActivity", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("WaveWebModel.ReviewActivity", "Activity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaveWebModel", Name="Org")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Org : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Org 对象。
        /// </summary>
        /// <param name="orgname">orgname 属性的初始值。</param>
        /// <param name="ostate">ostate 属性的初始值。</param>
        /// <param name="opasswd">opasswd 属性的初始值。</param>
        public static Org CreateOrg(global::System.String orgname, global::System.Int32 ostate, global::System.String opasswd)
        {
            Org org = new Org();
            org.orgname = orgname;
            org.ostate = ostate;
            org.opasswd = opasswd;
            return org;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String orgname
        {
            get
            {
                return _orgname;
            }
            set
            {
                if (_orgname != value)
                {
                    OnorgnameChanging(value);
                    ReportPropertyChanging("orgname");
                    _orgname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("orgname");
                    OnorgnameChanged();
                }
            }
        }
        private global::System.String _orgname;
        partial void OnorgnameChanging(global::System.String value);
        partial void OnorgnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ostate
        {
            get
            {
                return _ostate;
            }
            set
            {
                OnostateChanging(value);
                ReportPropertyChanging("ostate");
                _ostate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ostate");
                OnostateChanged();
            }
        }
        private global::System.Int32 _ostate;
        partial void OnostateChanging(global::System.Int32 value);
        partial void OnostateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String opasswd
        {
            get
            {
                return _opasswd;
            }
            set
            {
                OnopasswdChanging(value);
                ReportPropertyChanging("opasswd");
                _opasswd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("opasswd");
                OnopasswdChanged();
            }
        }
        private global::System.String _opasswd;
        partial void OnopasswdChanging(global::System.String value);
        partial void OnopasswdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String oemail
        {
            get
            {
                return _oemail;
            }
            set
            {
                OnoemailChanging(value);
                ReportPropertyChanging("oemail");
                _oemail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("oemail");
                OnoemailChanged();
            }
        }
        private global::System.String _oemail;
        partial void OnoemailChanging(global::System.String value);
        partial void OnoemailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ophone
        {
            get
            {
                return _ophone;
            }
            set
            {
                OnophoneChanging(value);
                ReportPropertyChanging("ophone");
                _ophone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ophone");
                OnophoneChanged();
            }
        }
        private Nullable<global::System.Decimal> _ophone;
        partial void OnophoneChanging(Nullable<global::System.Decimal> value);
        partial void OnophoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> oscore
        {
            get
            {
                return _oscore;
            }
            set
            {
                OnoscoreChanging(value);
                ReportPropertyChanging("oscore");
                _oscore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("oscore");
                OnoscoreChanged();
            }
        }
        private Nullable<global::System.Double> _oscore;
        partial void OnoscoreChanging(Nullable<global::System.Double> value);
        partial void OnoscoreChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String oaddress
        {
            get
            {
                return _oaddress;
            }
            set
            {
                OnoaddressChanging(value);
                ReportPropertyChanging("oaddress");
                _oaddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("oaddress");
                OnoaddressChanged();
            }
        }
        private global::System.String _oaddress;
        partial void OnoaddressChanging(global::System.String value);
        partial void OnoaddressChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaveWebModel", "FK_Activity_Activity", "Activity")]
        public EntityCollection<Activity> Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("WaveWebModel.FK_Activity_Activity", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("WaveWebModel.FK_Activity_Activity", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaveWebModel", "FK_Org_Org", "Org1")]
        public Org Org1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Org>("WaveWebModel.FK_Org_Org", "Org1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Org>("WaveWebModel.FK_Org_Org", "Org1").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Org> Org1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Org>("WaveWebModel.FK_Org_Org", "Org1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Org>("WaveWebModel.FK_Org_Org", "Org1", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaveWebModel", "FK_Org_Org", "Org")]
        public Org Org2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Org>("WaveWebModel.FK_Org_Org", "Org").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Org>("WaveWebModel.FK_Org_Org", "Org").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Org> Org2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Org>("WaveWebModel.FK_Org_Org", "Org");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Org>("WaveWebModel.FK_Org_Org", "Org", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaveWebModel", Name="SuperAdmin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SuperAdmin : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SuperAdmin 对象。
        /// </summary>
        /// <param name="supname">supname 属性的初始值。</param>
        /// <param name="spasswd">spasswd 属性的初始值。</param>
        public static SuperAdmin CreateSuperAdmin(global::System.String supname, global::System.String spasswd)
        {
            SuperAdmin superAdmin = new SuperAdmin();
            superAdmin.supname = supname;
            superAdmin.spasswd = spasswd;
            return superAdmin;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String supname
        {
            get
            {
                return _supname;
            }
            set
            {
                if (_supname != value)
                {
                    OnsupnameChanging(value);
                    ReportPropertyChanging("supname");
                    _supname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("supname");
                    OnsupnameChanged();
                }
            }
        }
        private global::System.String _supname;
        partial void OnsupnameChanging(global::System.String value);
        partial void OnsupnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String spasswd
        {
            get
            {
                return _spasswd;
            }
            set
            {
                OnspasswdChanging(value);
                ReportPropertyChanging("spasswd");
                _spasswd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("spasswd");
                OnspasswdChanged();
            }
        }
        private global::System.String _spasswd;
        partial void OnspasswdChanging(global::System.String value);
        partial void OnspasswdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaveWebModel", Name="TakeActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TakeActivity : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TakeActivity 对象。
        /// </summary>
        /// <param name="username">username 属性的初始值。</param>
        /// <param name="actid">actid 属性的初始值。</param>
        /// <param name="userscore">userscore 属性的初始值。</param>
        /// <param name="orgscore">orgscore 属性的初始值。</param>
        public static TakeActivity CreateTakeActivity(global::System.String username, global::System.Int32 actid, global::System.Int32 userscore, global::System.Int32 orgscore)
        {
            TakeActivity takeActivity = new TakeActivity();
            takeActivity.username = username;
            takeActivity.actid = actid;
            takeActivity.userscore = userscore;
            takeActivity.orgscore = orgscore;
            return takeActivity;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                if (_username != value)
                {
                    OnusernameChanging(value);
                    ReportPropertyChanging("username");
                    _username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("username");
                    OnusernameChanged();
                }
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 actid
        {
            get
            {
                return _actid;
            }
            set
            {
                if (_actid != value)
                {
                    OnactidChanging(value);
                    ReportPropertyChanging("actid");
                    _actid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("actid");
                    OnactidChanged();
                }
            }
        }
        private global::System.Int32 _actid;
        partial void OnactidChanging(global::System.Int32 value);
        partial void OnactidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userscore
        {
            get
            {
                return _userscore;
            }
            set
            {
                OnuserscoreChanging(value);
                ReportPropertyChanging("userscore");
                _userscore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userscore");
                OnuserscoreChanged();
            }
        }
        private global::System.Int32 _userscore;
        partial void OnuserscoreChanging(global::System.Int32 value);
        partial void OnuserscoreChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 orgscore
        {
            get
            {
                return _orgscore;
            }
            set
            {
                OnorgscoreChanging(value);
                ReportPropertyChanging("orgscore");
                _orgscore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("orgscore");
                OnorgscoreChanged();
            }
        }
        private global::System.Int32 _orgscore;
        partial void OnorgscoreChanging(global::System.Int32 value);
        partial void OnorgscoreChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaveWebModel", "FK_TakeActivity_Activity", "Activity")]
        public Activity Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("WaveWebModel.FK_TakeActivity_Activity", "Activity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("WaveWebModel.FK_TakeActivity_Activity", "Activity").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activity> ActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("WaveWebModel.FK_TakeActivity_Activity", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activity>("WaveWebModel.FK_TakeActivity_Activity", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaveWebModel", "FK_TakeActivity_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("WaveWebModel.FK_TakeActivity_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("WaveWebModel.FK_TakeActivity_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("WaveWebModel.FK_TakeActivity_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("WaveWebModel.FK_TakeActivity_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WaveWebModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Users 对象。
        /// </summary>
        /// <param name="username">username 属性的初始值。</param>
        /// <param name="ustate">ustate 属性的初始值。</param>
        /// <param name="upasswd">upasswd 属性的初始值。</param>
        /// <param name="uscore">uscore 属性的初始值。</param>
        public static Users CreateUsers(global::System.String username, global::System.Int32 ustate, global::System.String upasswd, global::System.Double uscore)
        {
            Users users = new Users();
            users.username = username;
            users.ustate = ustate;
            users.upasswd = upasswd;
            users.uscore = uscore;
            return users;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                if (_username != value)
                {
                    OnusernameChanging(value);
                    ReportPropertyChanging("username");
                    _username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("username");
                    OnusernameChanged();
                }
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ustate
        {
            get
            {
                return _ustate;
            }
            set
            {
                OnustateChanging(value);
                ReportPropertyChanging("ustate");
                _ustate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ustate");
                OnustateChanged();
            }
        }
        private global::System.Int32 _ustate;
        partial void OnustateChanging(global::System.Int32 value);
        partial void OnustateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String upasswd
        {
            get
            {
                return _upasswd;
            }
            set
            {
                OnupasswdChanging(value);
                ReportPropertyChanging("upasswd");
                _upasswd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("upasswd");
                OnupasswdChanged();
            }
        }
        private global::System.String _upasswd;
        partial void OnupasswdChanging(global::System.String value);
        partial void OnupasswdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String uemail
        {
            get
            {
                return _uemail;
            }
            set
            {
                OnuemailChanging(value);
                ReportPropertyChanging("uemail");
                _uemail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("uemail");
                OnuemailChanged();
            }
        }
        private global::System.String _uemail;
        partial void OnuemailChanging(global::System.String value);
        partial void OnuemailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> uphone
        {
            get
            {
                return _uphone;
            }
            set
            {
                OnuphoneChanging(value);
                ReportPropertyChanging("uphone");
                _uphone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("uphone");
                OnuphoneChanged();
            }
        }
        private Nullable<global::System.Decimal> _uphone;
        partial void OnuphoneChanging(Nullable<global::System.Decimal> value);
        partial void OnuphoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double uscore
        {
            get
            {
                return _uscore;
            }
            set
            {
                OnuscoreChanging(value);
                ReportPropertyChanging("uscore");
                _uscore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("uscore");
                OnuscoreChanged();
            }
        }
        private global::System.Double _uscore;
        partial void OnuscoreChanging(global::System.Double value);
        partial void OnuscoreChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WaveWebModel", "FK_TakeActivity_Users", "TakeActivity")]
        public EntityCollection<TakeActivity> TakeActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TakeActivity>("WaveWebModel.FK_TakeActivity_Users", "TakeActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TakeActivity>("WaveWebModel.FK_TakeActivity_Users", "TakeActivity", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
